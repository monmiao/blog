<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>monmiao</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://monmiao.github.io/"/>
  <updated>2017-03-24T10:11:47.000Z</updated>
  <id>https://monmiao.github.io/</id>
  
  <author>
    <name>monmiao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IntelliJ 2017 Register</title>
    <link href="https://monmiao.github.io/2017/03/24/IntelliJ-2017-Register/"/>
    <id>https://monmiao.github.io/2017/03/24/IntelliJ-2017-Register/</id>
    <published>2017-03-24T07:53:56.000Z</published>
    <updated>2017-03-24T10:11:47.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>在网上找了一圈,这个注册码一直能用,和大家分享下,顺便自己做下记录.(所有IntelliJ的产品都适用)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CNEKJPQZEX-eyJsaWNlbnNlSWQiOiJDTkVLSlBRWkVYIiwibGljZW5zZWVOYW1lIjoibGFuIHl1IiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiQUMiLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOC0wMS0zMCJ9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDE4LTAxLTMwIn0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE4LTAxLTMwIn0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJSQyIsInBhaWRVcFRvIjoiMjAxOC0wMS0zMCJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE4LTAxLTMwIn0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjAxOC0wMS0zMCJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDE4LTAxLTMwIn0seyJjb2RlIjoiUEMiLCJwYWlkVXBUbyI6IjIwMTgtMDEtMzAifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjAxOC0wMS0zMCJ9XSwiaGFzaCI6IjUxOTU1OTMvMCIsImdyYWNlUGVyaW9kRGF5cyI6MCwiYXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwiaXNBdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlfQ==-QOxwjWvRwJz6vo6J6adC3CJ4ukQHosbPYZ94URUVFna/Rbew8xK/M5gP3kAaPh6ZDveFdtMR1UBoumq3eCwXtXM3U3ls5noB4LIr+QplVlCj2pK5uNq7g/feyNyQcHpSXtvhIOnXDBLOecB05DOsxzm0p7ulGGJoAInmHeb9mc0eYjqc4RPpUQfh6HSYBnvEnKMlLF5bz4KEtzmsvvgA55CwzwQ3gRitm5Q/wUT7AQCBdjmBfNUjKVQL6TSjSDPp56FUdEs4Aab8LqstA2DIMbxocO64rvytmcUeIwu8Mi5uq87KQP5AQMSMYb59Inbd+dmVfx5cJo3fRS4/5s3/Hg==-MIIEPjCCAiagAwIBAgIBBTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE1MTEwMjA4MjE0OFoXDTE4MTEwMTA4MjE0OFowETEPMA0GA1UEAwwGcHJvZDN5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQC9WZuYgQedSuOc5TOUSrRigMw4/+wuC5EtZBfvdl4HT/8vzMW/oUlIP4YCvA0XKyBaCJ2iX+ZCDKoPfiYXiaSiH+HxAPV6J79vvouxKrWg2XV6ShFtPLP+0gPdGq3x9R3+kJbmAm8w+FOdlWqAfJrLvpzMGNeDU14YGXiZ9bVzmIQbwrBA+c/F4tlK/DV07dsNExihqFoibnqDiVNTGombaU2dDup2gwKdL81ua8EIcGNExHe82kjF4zwfadHk3bQVvbfdAwxcDy4xBjs3L4raPLU3yenSzr/OEur1+jfOxnQSmEcMXKXgrAQ9U55gwjcOFKrgOxEdek/Sk1VfOjvS+nuM4eyEruFMfaZHzoQiuw4IqgGc45ohFH0UUyjYcuFxxDSU9lMCv8qdHKm+wnPRb0l9l5vXsCBDuhAGYD6ss+Ga+aDY6f/qXZuUCEUOH3QUNbbCUlviSz6+GiRnt1kA9N2Qachl+2yBfaqUqr8h7Z2gsx5LcIf5kYNsqJ0GavXTVyWh7PYiKX4bs354ZQLUwwa/cG++2+wNWP+HtBhVxMRNTdVhSm38AknZlD+PTAsWGu9GyLmhti2EnVwGybSD2Dxmhxk3IPCkhKAK+pl0eWYGZWG3tJ9mZ7SowcXLWDFAk0lRJnKGFMTggrWjV8GYpw5bq23VmIqqDLgkNzuoog==</div></pre></td></tr></table></figure>
</li>
<li><p>使用步骤</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">复制上面的注册码,打开安装好的IntelliJ IDEA:</div></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/3808731-7b90c248b342a9db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">点击configure--&gt;Manage License...</div><div class="line">(或者已经进入到主界面时,点击Help--&gt;Register...),</div><div class="line">进入下图界面:</div></pre></td></tr></table></figure></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3808731-b3e3ab1a01411bba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">然后点击OK,即可完成注册.</div></pre></td></tr></table></figure></p>
<h3 id="点击下面按钮可以生成注册码-同样可以适用于所有IntelliJ的产品-idea-webstorm-phpstorm-亲测可用"><a href="#点击下面按钮可以生成注册码-同样可以适用于所有IntelliJ的产品-idea-webstorm-phpstorm-亲测可用" class="headerlink" title="点击下面按钮可以生成注册码,同样可以适用于所有IntelliJ的产品(idea webstorm phpstorm 亲测可用)"></a>点击下面按钮可以生成注册码,同样可以适用于所有IntelliJ的产品(idea webstorm phpstorm 亲测可用)</h3><p><button style="background-color: #4e78df;display: inline-block;border: 1px solid #dfdfdf;height: 40px;width: 60%;line-height: 40px;border-radius: 40px;padding: 0;color: #fff;margin-left: 20%;" onclick="GetLicenseKey()">获得注册码</button></p>
<p><div id="keys" style="display: none;"><br>    注册码:<br>    <iframe src="http://idea.lanyus.com/getkey?userName=lanyu" id="myiframe" style="width:100%"></iframe><br></div></p>
<script>
    function GetLicenseKey() {
        document.getElementById('keys').style.display = 'block';
    }
</script>

<ul>
<li>若资金允许，请点击<a href="https://www.jetbrains.com/idea/buy/" target="_blank" rel="external">https://www.jetbrains.com/idea/buy</a>购买正版，谢谢合作</li>
<li>感谢<a href="http://idea.lanyus.com/" target="_blank" rel="external">http://idea.lanyus.com</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;在网上找了一圈,这个注册码一直能用,和大家分享下,顺便自己做下记录.(所有IntelliJ的产品都适用)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div
    
    </summary>
    
      <category term="IntelliJ" scheme="https://monmiao.github.io/categories/IntelliJ/"/>
    
    
      <category term="笔记" scheme="https://monmiao.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>docker搭建springboot服务器笔记</title>
    <link href="https://monmiao.github.io/2017/03/20/docker-java-svr/"/>
    <id>https://monmiao.github.io/2017/03/20/docker-java-svr/</id>
    <published>2017-03-20T15:28:39.000Z</published>
    <updated>2017-03-24T08:30:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这个笔记是自己在docker搭建的大杂烩,可能不是docker的正确用法,欢迎讨论.请确认自己已经安装了docker,才可以根据本文档进行一步步的操作.我将会在拉去一个centos的镜像,并在centos中安装各种我们需要的应用(jdk,mysql,redis等),最后我会在这个服务中部署一个springboot的测试项目.接下来,我将会进行以下操作:</div></pre></td></tr></table></figure>
<h3 id="拉取centos镜像"><a href="#拉取centos镜像" class="headerlink" title="拉取centos镜像"></a>拉取centos镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 从网易蜂巢镜像中心拉去centos</span></div><div class="line">$ docker pull hub.c.163.com/public/centos:6.7-tools </div><div class="line"><span class="comment"># 启动</span></div><div class="line">$ docker run <span class="_">-d</span> -i -t &lt; IMAGE_ID &gt; /bin/bash</div><div class="line"><span class="comment"># 进入</span></div><div class="line">$ docker <span class="built_in">exec</span> -i -t &lt; IMAGE_ID &gt; /bin/bash</div><div class="line">$ docker stop|start &lt; CONTAINER_ID &gt;</div></pre></td></tr></table></figure>
<h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 进入docker容器中,安装mysql,等于是在centos6.7中安装一样</span></div><div class="line">$ yum install -y mysql-server mysql mysql-deve</div><div class="line">$ rpm -qi mysql-server <span class="comment">#查看mysql-server的版本信息,如下:</span></div><div class="line">Name        : mysql-server                 Relocations: (not relocatable)</div><div class="line">Version     : 5.1.73                            Vendor: CentOS</div><div class="line">Release     : 8.el6_8                       Build Date: Thu 26 Jan 2017 10:25:43 PM UTC</div><div class="line">Install Date: Mon 20 Mar 2017 08:32:23 AM UTC      Build Host: c1bm.rdu2.centos.org</div><div class="line">Group       : Applications/Databases        Source RPM: mysql-5.1.73-8.el6_8.src.rpm</div><div class="line">Size        : 25884131                         License: GPLv2 with exceptions</div><div class="line">Signature   : RSA/SHA1, Thu 26 Jan 2017 10:35:28 PM UTC, Key ID 0946fca2c105b9de</div><div class="line">Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;</div><div class="line">URL         : http://www.mysql.com</div><div class="line">Summary     : The MySQL server and related files</div><div class="line">Description :</div><div class="line">MySQL is a multi-user, multi-threaded SQL database server. MySQL is a</div><div class="line">client/server implementation consisting of a server daemon (mysqld)</div><div class="line">and many different client programs and libraries. This package contains</div><div class="line">the MySQL server and some accompanying files and directories.</div><div class="line"></div><div class="line">$ service mysqld start|stop|restart <span class="comment">#启动|关闭|重启</span></div></pre></td></tr></table></figure>
<h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 进入docker容器中,安装jdk,等于是在centos6.7中安装一样</span></div><div class="line"><span class="comment"># 下载</span></div><div class="line">$ curl -O http://download.oracle.com/otn-pub/java/jdk/8u121-b13/e9e7ea248e2c4826b92b3f075a80e441/jdk-8u121-linux-x64.rpm <span class="comment">#这个少了auth下载不了</span></div><div class="line">$ curl -O http://download.oracle.com/otn-pub/java/jdk/8u121-b13/e9e7ea248e2c4826b92b3f075a80e441/jdk-8u121-linux-x64.rpm?AuthParam=1490002480_af62e61bab6d497c2c58affbf1f6ac3b <span class="comment">#这可以下载但是会文件名称会带"?auth"的信息</span></div><div class="line"><span class="comment"># 下载完成之后,重名下,然后执行:</span></div><div class="line">$ rpm -ivh jdk-8u121-linux-x64.rpm <span class="comment">#进行安装</span></div><div class="line"><span class="comment"># 这个方式我也是第一次安装,后面不知道会遇到什么坑.</span></div><div class="line">$ java -version <span class="comment"># 版本信息:</span></div><div class="line">java version <span class="string">"1.8.0_121"</span></div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</div><div class="line">说明安装成功</div></pre></td></tr></table></figure>
<h3 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 下载</span></div><div class="line">$ wget http://download.redis.io/releases/redis-3.2.3.tar.gz</div><div class="line"><span class="comment"># 下载完成后解压</span></div><div class="line">$ tar -zxvf redis-3.2.3.tar.gz </div><div class="line"><span class="comment"># 安装</span></div><div class="line">$ make &amp;&amp; make install</div><div class="line"><span class="comment"># 这时候我发现安装不了(如果安装不了),少了这个gcc</span></div><div class="line">$ yum  install  gcc</div><div class="line"><span class="comment"># 安装完成之后再安装redis,然后修改下 ~/.bash_profile</span></div><div class="line">$ vi ~/.bash_profile <span class="comment">#添加,如下:</span></div><div class="line"><span class="comment">#redis</span></div><div class="line"><span class="built_in">export</span> REDIS_HOME=/usr/<span class="built_in">local</span>/redis</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$REDIS_HOME</span>/src</div><div class="line">$ <span class="built_in">source</span> ~/.bash_profile <span class="comment">#修改保存后记得source一下</span></div></pre></td></tr></table></figure>
<h3 id="安装maven"><a href="#安装maven" class="headerlink" title="安装maven"></a>安装maven</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 下载</span></div><div class="line">$ wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz</div><div class="line"><span class="comment"># 解压</span></div><div class="line">$ tar -zxvf apache-maven-3.3.9-bin.tar.gz </div><div class="line">$ vi ~/.bash_profile <span class="comment">#添加,如下:</span></div><div class="line"><span class="comment">#maven</span></div><div class="line"><span class="built_in">export</span> M2_HOME=/usr/<span class="built_in">local</span>/apache-maven</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$M2_HOME</span>/bin</div><div class="line">$ <span class="built_in">source</span> ~/.bash_profile <span class="comment">#修改保存后记得source一下</span></div><div class="line">$ mvn mvn --version <span class="comment">#版本信息:</span></div><div class="line">Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00)</div><div class="line">Maven home: /usr/<span class="built_in">local</span>/apache-maven</div><div class="line">Java version: 1.8.0_121, vendor: Oracle Corporation</div><div class="line">Java home: /usr/java/jdk1.8.0_121/jre</div><div class="line">Default locale: en_US, platform encoding: UTF-8</div><div class="line">OS name: <span class="string">"linux"</span>, version: <span class="string">"4.9.12-moby"</span>, arch: <span class="string">"amd64"</span>, family: <span class="string">"unix"</span></div></pre></td></tr></table></figure>
<h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 下载</span></div><div class="line">$ wget https://nginx.org/download/nginx-1.10.1.tar.gz</div><div class="line"><span class="comment"># 安装各种相关的环境先</span></div><div class="line">$ yum install -y pcre pcre-devel</div><div class="line">$ yum install -y zlib zlib-devel</div><div class="line">$ yum install -y openssl openssl-devel</div><div class="line"><span class="comment"># 执行配置</span></div><div class="line">$ ./configure</div><div class="line"><span class="comment"># 安装</span></div><div class="line">$ make &amp;&amp; make install</div><div class="line">$ vi ~/.bash_profile <span class="comment">#添加,如下:</span></div><div class="line"><span class="comment">#nginx</span></div><div class="line"><span class="built_in">export</span> NGINX_HOME=/usr/<span class="built_in">local</span>/nginx</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$NGINX_HOME</span>/sbin</div><div class="line">$ <span class="built_in">source</span> ~/.bash_profile <span class="comment"># 修改保存后记得source一下</span></div><div class="line">$ nginx -v <span class="comment"># 版本信息</span></div><div class="line">nginx version: nginx/1.10.1</div></pre></td></tr></table></figure>
<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 感觉最简单的一个了</span></div><div class="line">$ yum install git </div><div class="line">$ git --version <span class="comment">#版本信息</span></div><div class="line">git version 1.7.1</div></pre></td></tr></table></figure>
<p>到此基本安装完所需要的应用.</p>
<h3 id="docker根据容器创建镜像"><a href="#docker根据容器创建镜像" class="headerlink" title="docker根据容器创建镜像"></a>docker根据容器创建镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 打包成新的镜像</span></div><div class="line">$ docker commit -m <span class="string">"xxx"</span> <span class="_">-a</span> <span class="string">"xxx"</span> containerId resopsitory(目标镜像仓库、镜像名)</div><div class="line">-m：后面跟的是提交的信息</div><div class="line"><span class="_">-a</span>：后面跟的是作者。</div></pre></td></tr></table></figure>
<h3 id="提交到网易蜂巢-指南"><a href="#提交到网易蜂巢-指南" class="headerlink" title="提交到网易蜂巢 指南"></a>提交到网易蜂巢 <a href="http://support.c.163.com/md.html#!容器服务/镜像仓库/使用指南/推送本地镜像.md" target="_blank" rel="external">指南</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ docker login -u [你的蜂巢邮箱帐号或手机号码] -p [你的蜂巢密码] <span class="_">-e</span> [你的邮箱] hub.c.163.com <span class="comment"># 登录蜂巢镜像仓库</span></div><div class="line">$ docker tag [镜像名或ID] hub.c.163.com/[你的用户名]/[标签名] <span class="comment"># 标记本地镜像</span></div><div class="line">$ docker push hub.c.163.com/[你的用户名]/[标签名] <span class="comment"># 推送至蜂巢镜像仓库</span></div></pre></td></tr></table></figure>
<h3 id="未完-待续…"><a href="#未完-待续…" class="headerlink" title="未完,待续…"></a>未完,待续…</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
    
    </summary>
    
      <category term="技术" scheme="https://monmiao.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="笔记" scheme="https://monmiao.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>gulp搭建前端工作流</title>
    <link href="https://monmiao.github.io/2017/03/13/gulp-work-flow/"/>
    <id>https://monmiao.github.io/2017/03/13/gulp-work-flow/</id>
    <published>2017-03-13T10:48:23.000Z</published>
    <updated>2017-03-24T08:33:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><ul>
<li>这个项目基于上一篇<a href="https://monmiao.github.io/2017/03/10/gulp-own-guide/">“gulp搭建Es6环境项目指南”</a>的基础上进行搭建,我会在原来的基础上进行修改,它可以进行sass编译,es6转es5,压缩js,压缩css,压缩图片,压缩html(这个好像没什么效果),解决js/css缓存问题,启动本地开发Web服务器,我用的是mac,配合charles手机可以进行访问(局域网下直接访问本机ip,注意开放端口/关闭防火墙,我是关闭防火墙没有成功,所以用charles进行代理).</li>
</ul>
<h3 id="安装gulp"><a href="#安装gulp" class="headerlink" title="安装gulp"></a>安装gulp</h3><ul>
<li><p>首先确认已经安装好node, 检查是否安装 node -v 如果能看到版本,表示已经安装成功.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 全局安装Gulp</div><div class="line">$ npm install -g gulp</div><div class="line"># 在项目中安装Gulp</div><div class="line">$ npm install --save-dev gulp</div></pre></td></tr></table></figure>
</li>
<li><p>运行gulp -v,如果不报错，表示安装成功.</p>
</li>
</ul>
<h3 id="新建项目目录"><a href="#新建项目目录" class="headerlink" title="新建项目目录"></a>新建项目目录</h3><ul>
<li>比如gulp-pro,在命令行中进入到改项目目录,执行<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 在项目中安装Gulp</span></div><div class="line">$ npm install --save-dev gulp</div><div class="line"><span class="comment"># 让项目生产package.json文件</span></div><div class="line">$ npm init</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">-------------------gulp-pro</div><div class="line">|   |</div><div class="line">|   |--------------dist (该文件夹为打包生成的)</div><div class="line">|   |   |----------css</div><div class="line">|   |   |   |------index-xxxx.css</div><div class="line">|   |   |----------js</div><div class="line">|   |   |   |------index-xxxx.js</div><div class="line">|   |   |----------html</div><div class="line">|   |   |   |------home</div><div class="line">|   |   |   |   |------index.html</div><div class="line">|   |   |   |------index.html</div><div class="line">|   |</div><div class="line">|   |--------------src</div><div class="line">|   |   |----------scss</div><div class="line">|   |   |   |------index.scss</div><div class="line">|   |   |----------js</div><div class="line">|   |   |   |------index.js</div><div class="line">|   |   |----------html</div><div class="line">|   |   |   |------home</div><div class="line">|   |   |   |   |------index.html</div><div class="line">|   |   |   |------index.html</div><div class="line">|   |</div><div class="line">|   |--------------gulpfile.js</div><div class="line">|   |--------------package.json</div></pre></td></tr></table></figure>
<h3 id="安装相关插件"><a href="#安装相关插件" class="headerlink" title="安装相关插件"></a>安装相关插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 安装 Gulp 上 Babel 的插件</span></div><div class="line">$ npm install --save-dev gulp-babel </div><div class="line"><span class="comment"># 安装 Gulp 上 uglify 压缩插件</span></div><div class="line">$ npm install --save-dev gulp-uglify </div><div class="line"><span class="comment"># 安装 Gulp 上 sass 插件</span></div><div class="line">$ npm install --save-dev gulp-sass </div><div class="line"><span class="comment"># 安装 Gulp 上 clean 插件</span></div><div class="line">$ npm install --save-dev gulp-clean </div><div class="line"><span class="comment"># 安装 Gulp 上 rev 插件</span></div><div class="line">$ npm install --save-dev gulp-rev </div><div class="line"><span class="comment"># 安装 Gulp 上 rev-collector 插件 </span></div><div class="line">$ npm install --save-dev gulp-rev-collector</div><div class="line"><span class="comment"># 安装 Gulp 上 run-sequence 插件 </span></div><div class="line">$ npm install --save-dev run-sequence</div><div class="line"><span class="comment"># 安装 Gulp 上 gulp-webserver 插件 </span></div><div class="line">$ npm install --save-dev gulp-webserver</div><div class="line"><span class="comment"># 安装 Gulp 上 gulp-autoprefixer 插件 </span></div><div class="line">$ npm install --save-dev gulp-autoprefixer</div><div class="line"><span class="comment"># 安装 Gulp 上 gulp-imagemin 插件 </span></div><div class="line">$ npm install --save-dev gulp-imagemin</div><div class="line"><span class="comment"># 安装 Gulp 上 imagemin-pngquant 插件 </span></div><div class="line">$ npm install --save-dev imagemin-pngquant</div><div class="line"><span class="comment"># 安装 Gulp 上 gulp-cache 插件 </span></div><div class="line">$ npm install --save-dev gulp-cache</div><div class="line"><span class="comment"># 安装 Gulp 上 gulp-htmlmin 插件 </span></div><div class="line">$ npm install --save-dev gulp-htmlmin</div><div class="line"><span class="comment"># 安装 Gulp 上 gulp-minify-html 插件 </span></div><div class="line">$ npm install --save-dev gulp-minify-html</div></pre></td></tr></table></figure>
<h3 id="创建相关的文件"><a href="#创建相关的文件" class="headerlink" title="创建相关的文件"></a>创建相关的文件</h3><ul>
<li><p>在项目目录下,创建名为’.babelrc’(Babel工具和模块的使用,都必须先写好.babelrc,),该文件用来设置转码规则和插件,内容如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;presets&quot;: [&quot;es2015&quot;]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>创建’gulpfile.js’文件</p>
</li>
</ul>
<h3 id="gulpfile-js-内容如下"><a href="#gulpfile-js-内容如下" class="headerlink" title="gulpfile.js 内容如下"></a>gulpfile.js 内容如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div></pre></td><td class="code"><pre><div class="line">var gulp = require(&quot;gulp&quot;);</div><div class="line">var babel = require(&quot;gulp-babel&quot;);// 用于ES6转化ES5</div><div class="line">var uglify = require(&apos;gulp-uglify&apos;);// 用于压缩 JS</div><div class="line">var sass = require(&apos;gulp-sass&apos;); //scss编译</div><div class="line">var rev = require(&apos;gulp-rev&apos;); //rev hash码</div><div class="line">var reCollector = require(&apos;gulp-rev-collector&apos;); //替换html中的js,css文件 刷新缓存</div><div class="line">var clean = require(&apos;gulp-clean&apos;);//清空文件夹里所有的文件</div><div class="line">var webserver = require(&apos;gulp-webserver&apos;);//服务器</div><div class="line">var autoprefixer = require(&apos;gulp-autoprefixer&apos;);//css浏览器内核前缀自动补全</div><div class="line">var runSequence = require(&apos;run-sequence&apos;);//顺序执行</div><div class="line">var minImage = require(&apos;gulp-imagemin&apos;);//图片压缩</div><div class="line">var minImageForPng = require(&apos;imagemin-pngquant&apos;);//图片压缩（png）</div><div class="line">var cache = require(&quot;gulp-cache&quot;);//缓存</div><div class="line">var minHtml = require(&quot;gulp-htmlmin&quot;);//html压缩（js、css压缩）</div><div class="line">var minHtmlForJT = require(&quot;gulp-minify-html&quot;);//html压缩（js模板压缩）</div><div class="line">/**</div><div class="line"> * 生产环境product</div><div class="line"> */</div><div class="line">// ES6转化为ES5</div><div class="line">// 在命令行使用 gulp toes5 启动此任务</div><div class="line">gulp.task(&quot;toes5&quot;, () =&gt; &#123;</div><div class="line">    return gulp.src(&quot;src/es6js/*.js&quot;)// ES6 源码存放的路径</div><div class="line">        .pipe(babel())</div><div class="line">        .pipe(gulp.dest(&quot;src/js&quot;)); //转换成 ES5 存放的路径</div><div class="line">&#125;);</div><div class="line">//scss编译</div><div class="line">gulp.task(&apos;pro-css&apos;, () =&gt; &#123;</div><div class="line">    return gulp.src(&apos;src/sass/**/*.scss&apos;)</div><div class="line">        .pipe(sass(&#123;</div><div class="line">            outputStyle: &apos;compressed&apos;//编译并输出压缩过的文件</div><div class="line">        &#125;))</div><div class="line">        .pipe(rev())//给css添加哈希值</div><div class="line">        .pipe(gulp.dest(&apos;dist/css&apos;))</div><div class="line">        .pipe(rev.manifest())//给添加哈希值的文件添加到清单中</div><div class="line">        .pipe(gulp.dest(&apos;rev/css&apos;));</div><div class="line">&#125;);</div><div class="line">//压缩js</div><div class="line">gulp.task(&apos;pro-js&apos;, () =&gt; &#123;</div><div class="line">    return gulp.src(&apos;src/es6js/**/*.js&apos;)</div><div class="line">        .pipe(babel()) //转换成 ES5 </div><div class="line">        .pipe(uglify()) //压缩js</div><div class="line">        .pipe(rev()) //给js添加哈希值</div><div class="line">        .pipe(gulp.dest(&apos;dist/js&apos;))</div><div class="line">        .pipe(rev.manifest()) //给添加哈希值的文件添加到清单中</div><div class="line">        .pipe(gulp.dest(&apos;rev/js&apos;));</div><div class="line">&#125;);</div><div class="line">//将处理过的css，js引入html</div><div class="line">gulp.task(&apos;reCollector&apos;, () =&gt; &#123;</div><div class="line">    return gulp.src([&apos;rev/**/*.json&apos;, &apos;src/html/**/*.html&apos;])</div><div class="line">        .pipe(reCollector(&#123;</div><div class="line">            replaceReved: true,  //模板中已经被替换的文件是否还能再被替换,默认是false</div><div class="line">            dirReplacements: &#123;   //标识目录替换的集合, 因为gulp-rev创建的manifest文件不包含任何目录信息,</div><div class="line">                &apos;css/&apos;: &apos;css/&apos;,</div><div class="line">                &apos;js/&apos;: &apos;js/&apos;</div><div class="line">            &#125;</div><div class="line">        &#125;))</div><div class="line">        .pipe(gulp.dest(&apos;dist/html&apos;))</div><div class="line">&#125;);</div><div class="line">//每次打包时先清空原有的文件夹</div><div class="line">gulp.task(&apos;clean&apos;, () =&gt; &#123;</div><div class="line">    return gulp.src([&apos;dist&apos;, &apos;rev&apos;], &#123;read: false&#125;) //这里设置的dist表示删除dist文件夹及其下所有文件</div><div class="line">        .pipe(clean());</div><div class="line">&#125;);</div><div class="line">gulp.task(&apos;pro-webServer&apos;, function () &#123;</div><div class="line">    return gulp.src(&apos;dist/&apos;)</div><div class="line">        .pipe(webserver(&#123;</div><div class="line">            port: 10889,//端口</div><div class="line">            livereload: true,</div><div class="line">            // directoryListing: true,</div><div class="line">            directoryListing: &#123;</div><div class="line">                enable: true,</div><div class="line">                path: &apos;./dist&apos;</div><div class="line">            &#125;,</div><div class="line">            open: true</div><div class="line">        &#125;));</div><div class="line">&#125;);</div><div class="line">// 自动添加前缀</div><div class="line">gulp.task(&apos;autoFx&apos;, function () &#123;</div><div class="line">    gulp.src(&apos;dist/css/**/*.css&apos;)</div><div class="line">        .pipe(autoprefixer(&#123;</div><div class="line">            browsers: [&apos;last 2 versions&apos;],</div><div class="line">            cascade: true, //是否美化属性值 默认：true 像这样：</div><div class="line">            //-webkit-transform: rotate(45deg);</div><div class="line">            //        transform: rotate(45deg);</div><div class="line">            remove: true //是否去掉不必要的前缀 默认：true</div><div class="line">        &#125;))</div><div class="line">        .pipe(gulp.dest(&apos;dist/css&apos;));</div><div class="line">&#125;);</div><div class="line">//压缩图片</div><div class="line">gulp.task(&apos;minImage&apos;, function () &#123;</div><div class="line">    return gulp.src(&apos;src/images/**/*.&#123;png,jpg,gif,ico&#125;&apos;)</div><div class="line">        .pipe(cache(minImage(&#123;</div><div class="line">            progressive: true,</div><div class="line">            use: [minImageForPng()]</div><div class="line">        &#125;)))</div><div class="line">        .pipe(gulp.dest(&apos;dist/images&apos;));</div><div class="line">&#125;);</div><div class="line">//压缩html</div><div class="line">gulp.task(&apos;minHtml&apos;, function () &#123;</div><div class="line">    return gulp.src(&apos;src/html/**/*.html&apos;)</div><div class="line">        .pipe(minHtmlForJT())//附带压缩页面上的js模板</div><div class="line">        .pipe(minHtml(&#123;</div><div class="line">            removeComments: true,</div><div class="line">            collapseWhitespace: true,</div><div class="line">            collapseBooleanAttributes: true,</div><div class="line">            removeEmptyAttributes: true,</div><div class="line">            removeScriptTypeAttributes: true,</div><div class="line">            removeStyleLinkTypeAttributes: true,</div><div class="line">            minifyJS: true,</div><div class="line">            minifyCSS: true</div><div class="line">        &#125;))//附带压缩页面上的css、js</div><div class="line">        .pipe(gulp.dest(&apos;src/dist&apos;));</div><div class="line">&#125;);</div><div class="line">gulp.task(&apos;product&apos;, function (callback) &#123;</div><div class="line">    runSequence(</div><div class="line">        &apos;clean&apos;,</div><div class="line">        [&apos;pro-js&apos;, &apos;pro-css&apos;, &apos;minImage&apos;],</div><div class="line">        &apos;autoFx&apos;,</div><div class="line">        &apos;reCollector&apos;,</div><div class="line">        &apos;minHtml&apos;,</div><div class="line">        &apos;pro-webServer&apos;,</div><div class="line">        callback);</div><div class="line">&#125;);</div><div class="line">/**</div><div class="line"> * 测试环境test</div><div class="line"> */</div><div class="line">//scss编译</div><div class="line">gulp.task(&apos;test-css&apos;, () =&gt; &#123;</div><div class="line">    return gulp.src(&apos;src/sass/**/*.scss&apos;)</div><div class="line">        .pipe(sass(&#123;</div><div class="line">            outputStyle: &apos;compressed&apos;//编译并输出压缩过的文件</div><div class="line">        &#125;))</div><div class="line">        .pipe(gulp.dest(&apos;src/css&apos;))</div><div class="line">&#125;);</div><div class="line">//压缩js</div><div class="line">gulp.task(&apos;test-js&apos;, () =&gt; &#123;</div><div class="line">    return gulp.src(&apos;src/es6js/**/*.js&apos;)</div><div class="line">        .pipe(babel()) //转换成 ES5</div><div class="line">        .pipe(uglify()) //压缩js</div><div class="line">        .pipe(gulp.dest(&apos;src/js&apos;))</div><div class="line">&#125;);</div><div class="line">//创建watch任务去检测html文件,其定义了当html改动之后，去调用一个Gulp的Task</div><div class="line">gulp.task(&apos;watch&apos;, function () &#123;</div><div class="line">    gulp.watch([&apos;./src/sass/**/*.scss&apos;], [&apos;test-css&apos;]);</div><div class="line">    gulp.watch([&apos;./src/es6js/**/*.js&apos;], [&apos;test-js&apos;]);</div><div class="line">&#125;);</div><div class="line">gulp.task(&apos;test-webServer&apos;, function () &#123;</div><div class="line">    return gulp.src(&apos;src/&apos;)</div><div class="line">        .pipe(webserver(&#123;</div><div class="line">            port: 10888,//端口</div><div class="line">            livereload: true,</div><div class="line">            // directoryListing: true,</div><div class="line">            directoryListing: &#123;</div><div class="line">                enable: true,</div><div class="line">                path: &apos;./src&apos;</div><div class="line">            &#125;,</div><div class="line">            open: true</div><div class="line">        &#125;));</div><div class="line">&#125;);</div><div class="line">gulp.task(&apos;test&apos;, function (callback) &#123;</div><div class="line">    runSequence(</div><div class="line">        [&apos;test-js&apos;, &apos;test-css&apos;],</div><div class="line">        &apos;watch&apos;,</div><div class="line">        &apos;test-webServer&apos;,</div><div class="line">        callback);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="task执行命令"><a href="#task执行命令" class="headerlink" title="task执行命令"></a>task执行命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># gulp 任务名称</span></div><div class="line">$ gulp product //生产打包</div><div class="line">$ gulp <span class="built_in">test</span> //测试运行</div></pre></td></tr></table></figure>
<h3 id="github地址-gulp-workflow"><a href="#github地址-gulp-workflow" class="headerlink" title="github地址: gulp-workflow"></a>github地址: <a href="https://github.com/marquessc/gulp-workflow" target="_blank" rel="external">gulp-workflow</a></h3><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul>
<li>该文档是gulp入坑的记录,如果错误欢迎留言指正,如有转载,请注明出处,谢谢.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;这个项目基于上一篇&lt;a href=&quot;https://monmiao.github.io/2017/03/10/gulp-own-
    
    </summary>
    
      <category term="gulp" scheme="https://monmiao.github.io/categories/gulp/"/>
    
    
      <category term="笔记" scheme="https://monmiao.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>gulp搭建Es6环境项目指南</title>
    <link href="https://monmiao.github.io/2017/03/10/gulp-own-guide/"/>
    <id>https://monmiao.github.io/2017/03/10/gulp-own-guide/</id>
    <published>2017-03-10T07:18:22.000Z</published>
    <updated>2017-03-24T08:33:08.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>这个项目最终想要得到的效果是可以预编译ES6,SCSS,压缩css,压缩js</li>
<li>首先确认已经安装好node, 检查是否安装 node -v 如果能看到版本,表示已经安装成功.</li>
</ul>
<h3 id="安装gulp"><a href="#安装gulp" class="headerlink" title="安装gulp"></a>安装gulp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 全局安装Gulp</div><div class="line">$ npm install -g gulp</div><div class="line"># 在项目中安装Gulp</div><div class="line">$ npm install --save-dev gulp</div></pre></td></tr></table></figure>
<ul>
<li>运行gulp -v,如果不报错，表示安装成功.</li>
</ul>
<h3 id="新建项目目录-比如gulp-pro-在命令行中进入到改项目目录-执行"><a href="#新建项目目录-比如gulp-pro-在命令行中进入到改项目目录-执行" class="headerlink" title="新建项目目录,比如gulp-pro,在命令行中进入到改项目目录,执行"></a>新建项目目录,比如gulp-pro,在命令行中进入到改项目目录,执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 在项目中安装Gulp</span></div><div class="line">$ npm install --save-dev gulp</div><div class="line"><span class="comment"># 让项目生产package.json文件</span></div><div class="line">$ npm init</div></pre></td></tr></table></figure>
<h3 id="创建项目目录结构"><a href="#创建项目目录结构" class="headerlink" title="创建项目目录结构"></a>创建项目目录结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">-------------------gulp-pro</div><div class="line">|   |</div><div class="line">|   |--------------dist (该文件夹为打包生成的)</div><div class="line">|   |   |----------css</div><div class="line">|   |   |   |------index-xxxx.css</div><div class="line">|   |   |----------js</div><div class="line">|   |   |   |------index-xxxx.js</div><div class="line">|   |   |----------html</div><div class="line">|   |   |   |------index.html</div><div class="line">|   |</div><div class="line">|   |--------------src</div><div class="line">|   |   |----------scss</div><div class="line">|   |   |   |------index.scss</div><div class="line">|   |   |----------js</div><div class="line">|   |   |   |------index.js</div><div class="line">|   |   |----------html</div><div class="line">|   |   |   |------index.html</div><div class="line">|   |</div><div class="line">|   |--------------gulpfile.js</div><div class="line">|   |--------------package.json</div></pre></td></tr></table></figure>
<h3 id="安装相关插件"><a href="#安装相关插件" class="headerlink" title="安装相关插件"></a>安装相关插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 安装 Gulp 上 Babel 的插件</span></div><div class="line">$ npm install --save-dev gulp-babel</div><div class="line"><span class="comment"># 安装 Babel 上将 ES6 转换成 ES5 的插件</span></div><div class="line">$ npm install --save-dev babel-preset-es2015</div><div class="line"><span class="comment"># 安装 Gulp 上 uglify 压缩插件</span></div><div class="line">$ npm install --save-dev gulp-uglify</div><div class="line"><span class="comment"># 安装 Gulp 上 sass 插件</span></div><div class="line">$ npm install --save-dev gulp-sass</div><div class="line"><span class="comment"># 安装 Gulp 上 clean 插件</span></div><div class="line">$ npm install --save-dev gulp-clean</div><div class="line"><span class="comment"># 安装 Gulp 上 rev 插件</span></div><div class="line">$ npm install --save-dev gulp-rev</div><div class="line"><span class="comment"># 安装 Gulp 上 rev-collector 插件 </span></div><div class="line">$ npm install --save-dev gulp-rev-collector</div></pre></td></tr></table></figure>
<h3 id="gulpfile-js-内容如下"><a href="#gulpfile-js-内容如下" class="headerlink" title="gulpfile.js 内容如下"></a>gulpfile.js 内容如下</h3><figure class="highlight plain"><figcaption><span>6</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">var gulp = require(&quot;gulp&quot;);</div><div class="line">var babel = require(&quot;gulp-babel&quot;);    // 用于ES6转化ES5</div><div class="line">var uglify = require(&apos;gulp-uglify&apos;); // 用于压缩 JS</div><div class="line">var sass = require(&apos;gulp-sass&apos;); //scss编译</div><div class="line">var rev = require(&apos;gulp-rev&apos;); //rev hash码</div><div class="line">var reCollector = require(&apos;gulp-rev-collector&apos;); //</div><div class="line">var clean = require(&apos;gulp-clean&apos;);//清空文件夹里所有的文件</div><div class="line">// ES6转化为ES5</div><div class="line">// 在命令行使用 gulp toes5 启动此任务</div><div class="line">gulp.task(&quot;toes5&quot;, () =&gt; &#123;</div><div class="line">    return gulp.src(&quot;src/js/*.js&quot;)// ES6 源码存放的路径</div><div class="line">        .pipe(babel())</div><div class="line">        .pipe(gulp.dest(&quot;dist/js&quot;)); //转换成 ES5 存放的路径</div><div class="line">&#125;);</div><div class="line">//scss编译</div><div class="line">gulp.task(&apos;css&apos;, () =&gt; &#123;</div><div class="line">    gulp.src(&apos;src/scss/*.scss&apos;)</div><div class="line">        .pipe(sass(&#123;</div><div class="line">            outputStyle: &apos;compressed&apos;               //编译并输出压缩过的文件</div><div class="line">        &#125;))</div><div class="line">        .pipe(rev())                                //给css添加哈希值</div><div class="line">        .pipe(gulp.dest(&apos;dist/css&apos;))</div><div class="line">        .pipe(rev.manifest())                       //给添加哈希值的文件添加到清单中</div><div class="line">        .pipe(gulp.dest(&apos;rev/css&apos;));</div><div class="line">&#125;);</div><div class="line">//压缩js</div><div class="line">gulp.task(&apos;js&apos;, () =&gt; &#123;</div><div class="line">    gulp.src(&apos;src/js/*.js&apos;)</div><div class="line">        .pipe(babel()) //转换成 ES5 </div><div class="line">        .pipe(uglify()) //压缩js</div><div class="line">        .pipe(rev()) //给js添加哈希值</div><div class="line">        .pipe(gulp.dest(&apos;dist/js&apos;))</div><div class="line">        .pipe(rev.manifest()) //给添加哈希值的文件添加到清单中</div><div class="line">        .pipe(gulp.dest(&apos;rev/js&apos;));</div><div class="line">&#125;);</div><div class="line">//将处理过的css，js引入html</div><div class="line">gulp.task(&apos;reCollector&apos;, () =&gt; &#123;</div><div class="line">    gulp.src([&apos;rev/**/*.json&apos;, &apos;src/html/*.html&apos;, &apos;src/html/**/*.html&apos;])</div><div class="line">        .pipe(reCollector(&#123;</div><div class="line">            replaceReved: true,  //模板中已经被替换的文件是否还能再被替换,默认是false</div><div class="line">            dirReplacements: &#123;   //标识目录替换的集合, 因为gulp-rev创建的manifest文件不包含任何目录信息,</div><div class="line">                &apos;css/&apos;: &apos;css/&apos;,</div><div class="line">                &apos;js/&apos;: &apos;js/&apos;</div><div class="line">            &#125;</div><div class="line">        &#125;))</div><div class="line">        .pipe(gulp.dest(&apos;dist/html&apos;))</div><div class="line">&#125;);</div><div class="line">//每次打包时先清空原有的文件夹</div><div class="line">gulp.task(&apos;clean&apos;, () =&gt; &#123;</div><div class="line">    gulp.src([&apos;dist&apos;, &apos;rev&apos;], &#123;read: false&#125;) //这里设置的dist表示删除dist文件夹及其下所有文件</div><div class="line">        .pipe(clean());</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="task执行命令"><a href="#task执行命令" class="headerlink" title="task执行命令"></a>task执行命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># gulp 任务名称</span></div><div class="line">$ gulp toes5 //转为es5</div><div class="line">$ gulp css //scss编译</div><div class="line">$ gulp js //js压缩</div><div class="line">$ gulp reCollector //替换html中的js/css文件</div><div class="line">$ gulp clean //清空文件</div></pre></td></tr></table></figure>
<h3 id="github项目地址-https-github-com-monmiao-gulp-pro"><a href="#github项目地址-https-github-com-monmiao-gulp-pro" class="headerlink" title="github项目地址 https://github.com/monmiao/gulp-pro"></a>github项目地址 <a href="https://github.com/monmiao/gulp-pro" target="_blank" rel="external">https://github.com/monmiao/gulp-pro</a></h3><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul>
<li>该文档是自己学习时的记录,如果错误欢迎留言指正,如有转载,请注明出处,谢谢.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;这个项目最终想要得到的效果是可以预编译ES6,SCSS,压缩css,压缩js&lt;/li&gt;
&lt;li&gt;首先确认已经安装好node, 检查是否安装 node -v 如果能看到版本,表示已经安装成功.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装gulp&quot;&gt;&lt;a href=
    
    </summary>
    
      <category term="gulp" scheme="https://monmiao.github.io/categories/gulp/"/>
    
    
      <category term="笔记" scheme="https://monmiao.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://monmiao.github.io/2017/03/10/hello-world/"/>
    <id>https://monmiao.github.io/2017/03/10/hello-world/</id>
    <published>2017-03-09T16:12:37.000Z</published>
    <updated>2017-03-09T16:12:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="测试" scheme="https://monmiao.github.io/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo使用指南(简单)</title>
    <link href="https://monmiao.github.io/2017/03/09/hexo-user-guide/"/>
    <id>https://monmiao.github.io/2017/03/09/hexo-user-guide/</id>
    <published>2017-03-09T07:25:54.000Z</published>
    <updated>2017-03-24T08:33:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装node"><a href="#1-安装node" class="headerlink" title="1.安装node"></a>1.安装node</h3><h3 id="2-注册github"><a href="#2-注册github" class="headerlink" title="2.注册github"></a>2.注册github</h3><ul>
<li>以上两步,我已经安装了,不懂得找度娘,或者留言.</li>
</ul>
<h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h3><ul>
<li>首先创建一个文件夹,如blog,用户存放hexo的配置文件,然后进入blog里安装Hexo。命令: </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd blog</div><div class="line">$ sudo npm install -g hexo</div><div class="line">$ hexo init</div></pre></td></tr></table></figure>
<ul>
<li>执行完以上的命令后,就基本完成了初始化的工作,以后博客的所以操作都是blog的目录下面hexo相关命令(常用):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ hexo init 初始化</div><div class="line">$ hexo generate (hexo g 也可以) 生成静态页面</div><div class="line">$ hexo server (hexo s 也可以) 启动本地服务 浏览器 http://localhost:4000 就可以预览</div><div class="line">$ hexo deploy 部署</div><div class="line">$ hexo new&quot;postName&quot; #新建文章</div><div class="line">$ hexo new page&quot;pageName&quot; #新建页面</div><div class="line">$ hexo generate #生成静态页面至public目录</div><div class="line">$ hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">$ hexo deploy #将.deploy目录部署到GitHub</div><div class="line">$ hexo help # 查看帮助</div><div class="line">$ hexo version #查看Hexo的版本</div></pre></td></tr></table></figure>
<h3 id="4-部署-此处省去github配置"><a href="#4-部署-此处省去github配置" class="headerlink" title="4.部署 (此处省去github配置)"></a>4.部署 (此处省去github配置)</h3><ul>
<li>部署步骤,可按以下三步来进行:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-安装node&quot;&gt;&lt;a href=&quot;#1-安装node&quot; class=&quot;headerlink&quot; title=&quot;1.安装node&quot;&gt;&lt;/a&gt;1.安装node&lt;/h3&gt;&lt;h3 id=&quot;2-注册github&quot;&gt;&lt;a href=&quot;#2-注册github&quot; class=&quot;
    
    </summary>
    
      <category term="hexo" scheme="https://monmiao.github.io/categories/hexo/"/>
    
    
      <category term="笔记" scheme="https://monmiao.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
